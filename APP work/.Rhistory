class(snapr_files)
str(snapr_files)
snapr_files[1]
str(snapr_files)
snapr_files$v1[1]
snapr_files$V1[1]
str(snapr_files)
snapr_files[1]
sub("snapr/", "", snapr_files$V1)
snapr_files <- sub("snapr/", "", snapr_files$V1)
snapr_files
str(source_files)
?gsub
snapr_files <- read.table("snapr_files", stringsAsFactors = FALSE)
gsub("snapr/", "", snapr_files)
gsub("snapr/", "", snapr_files$V1)
source_files
source_files
source_files[1]
as.matrix(read.table("snapr_files"))
snapr_files <- read.table("snapr_files")
source_files  <- read.table("source_files")
snapr_files <- snapr_files$V1
source_files <- source_files$V1
snapr_files <- gsub("snapr/", "", snapr_files)
gsub("\.snap\.bam", "", snapr_files)
gsub("/.snap/.bam", "", snapr_files)
gsub(".snap.bam", "", snapr_files)
snapr_files <- read.table("snapr_files")
snapr_files <- snapr_files$V1
processed_samples <- gsub("snapr/", "", snapr_files)
#strip .snap.bam from end
processed_samples <- gsub(".snap.bam", "", processed_samples)
processed_smaples
processed_samples
gsub(".+$", "", processed_samples)
gsub("\\.+$", "", processed_samples)
gsub("\.+$", "", processed_samples)
gsub("/.+$", "", processed_samples)
gsub("/.+*", "", processed_samples)
gsub("/.+", "", processed_samples)
gsub("/.*", "", processed_samples)
gsub("/..+", "", processed_samples)
gsub("/..+$", "", processed_samples)
sub("\..+", "", processed_samples)
sub("/..+", "", processed_samples)
gsub("\..+$", "", processed_samples)
gsub("/..+$", "", processed_samples)
regex("\..+", processed_samples)
regex("/..+", processed_samples)
?regexp
regexp("/..+", processed_samples)
regexpr("/..+", processed_samples)
regexpr("/.", processed_samples)
gsub("/.", "", processed_samples)
processed_samples[1]
gsub("/.", "", processed_samples[1])
gsub("FCC", "", processed_samples[1])
gsub("/.FCC", "", processed_samples[1])
gsub("\.FCC", "", processed_samples[1])
gsub("\\..+", "", processed_samples[1])
processed_samples[1]
gsub("\\..+", "", processed_samples)
processed_samples <- gsub("\\..+", "", processed_samples)
class processed_samples
class(processed_samples)
source_files
processed_samples %in% source_files
snapr_files %in% source_files
proced_samples
processed_samples
source_files
source_files[1]
?read.table
source_files  <- read.table("source_files", stringsAsFactors = FALSE)
snapr_files <- read.table("snapr_files", stringsAsFactors = FALSE)
source_files  <- read.table("source_files", stringsAsFactors = FALSE)
snapr_files <- snapr_files$V1
source_files <- source_files$V1
source_files[1]
processed_samples <- gsub("snapr/", "", snapr_files)
processed_samples <- gsub(".snap.bam", "", processed_samples)
# strip everything after a period
processed_samples <- gsub("\\..+", "", processed_samples)
processed_samples %in% source_files
processed_samples
head(source_files)
source_files
grep(processed_samples[1], source_files)
grep(processed_samples[2], source_files)
?regexpr
gsub(".+/", "", source_files)
source_samples <- gsub(".+/", "", source_files)
source_samples <- gsub(".fastq.gz", "", source_samples)
source_samples
gsub("\\._", "", source_samples)
source_samples <- gsub("\\._", "", source_samples)
gsub("\\..+", "", source_samples)
intersect(source_samples, processed_samples)
source_samples
processed_samples
source_samples <- gsub("\\..+", "", source_samples)
intersect(source_samples, processed_samples)
processed_samples %in% source_samples
source_samples %in% processed_samples
source_files[1]
processed_samples
source_samples %in% processed_samples
source_files(source_samples %in% processed_samples)
source_files
source_files[source_samples %in% processed_samples]
750-128
750/2
375-128
source_files[!(source_samples %in% processed_samples)]
750-128
375-128
processed_samples
source_files[!(source_samples %in% processed_samples)]
paste("test", source_files)
paste("test", source_files, collapse = """)
""
paste("test", source_files, collapse = "")
paste("test", source_files, collapse = "\n")
paste("test", source_files, collapse = "/n")
paste("test", source_files)
paste("s3://mayo-u01-rnaseq", source_files)
not_run <- source_files[!(source_samples %in% processed_samples)]
not_run <- paste("s3://mayo-u01-rnaseq", not_run)
gsub("\w", "", not_run)
gsub("/w", "", not_run)
?grep
?gregexp
?regexp
gsub("[:space:]", "//", not_run)
gsub(" ", "/", not_run)
gsub(" ", "/", not_run)
not_run <- gsub(" ", "/", not_run)
not_run
?write
write(not_run, "not_run")
249+128
750/2
setwd("~/Projects/UO1-AMP/working/APP work")
library(synapseClient) # for synapse data exchange
synapseLogin()
bamFileList <- synGet('syn3539805'')
''
bamFileList <- synGet('syn3539805')
bamFileListObject <- synGet('syn3539805')
localFilePath <- getFileLocation(bamFileListObject)
bamFileList <- read.table(localFilePath, header = TRUE)
View(bamFileList)
View(bamFileList)
bamFileList <- read.table(localFilePath, header = FALSE)
?read.table
View(bamFileList)
View(bamFileList)
bamFileList <- bamFileList$V1
bamFileList
bamFiles <- gsub("APP_Samples/snapr/", "", bamFileList)
bamFiles
bamFiles <- gsub(".snap.bam", "", bamFiles)
bamFiles
bamFiles <- gsub("\\..+", "", bamFiles)
bamFiles
bamfiles
library(synapseClient) # for synapse data exchange
library(RCurl) # to grab google doc covariates files
source("uploadToSynapse.R")
synapseLogin()
url1 <- getURL("https://docs.google.com/spreadsheets/d/1IQnJheILYLsUgWbwPT7Qmrmi-JngK0R3HTAJUfBYRUg/export?format=csv")
url2 <- getURL("https://docs.google.com/spreadsheets/d/1X_QRh-xw8q3lZ8IOosHdydxUsoP2Ucgxbfbk0FzMJx4/export?format=csv")
rawCovariates1 <- read.csv(textConnection(url1))
rawCovariates2 <- read.csv(textConnection(url2))
rawCovariates2 <- rawCovariates2[2:129,]
APPCovariates = data.frame("Mouse_ID" = rawCovariates2$Mouse.ID)
APPCovariates <- cbind(APPCovariates, "Experiment" = rawCovariates2$Line)
APPCovariates <- cbind(APPCovariates, "RIN" = rawCovariates2$RIN)
APPCovariates <- cbind(APPCovariates, "Genotype" = rawCovariates2$Genotype)
APPCovariates <- cbind(APPCovariates, "Sex" = rawCovariates2$Sex)
APPCovariates <- cbind(APPCovariates, "Age_months" = rawCovariates2$Age)
APPCovariates <- cbind(APPCovariates, "RLIMS.ID" =
rawCovariates1$RLIMS.ID[match(APPCovariates$Mouse_ID,
rawCovariates1$Sample.Name)])
APPCovariates <- cbind(APPCovariates, "Seq.Run.ID" =
rawCovariates1$Seq.Run.ID[match(APPCovariates$Mouse_ID,
rawCovariates1$Sample.Name)])
APPCovariates <- cbind(APPCovariates, "Lane.Number" =
rawCovariates1$Lane.Number[match(APPCovariates$Mouse_ID,
rawCovariates1$Sample.Name)])
APPCovariates <- cbind(APPCovariates, "Clusters" =
rawCovariates1$Clusters[match(APPCovariates$Mouse_ID,
rawCovariates1$Sample.Name)])
View(APPCovariates)
View(APPCovariates)
bamFileListObject <- synGet('syn3539805')
localFilePath <- getFileLocation(bamFileListObject)
bamFileList <- read.table(localFilePath, header = FALSE)
bamFileList <- bamFileList$V1
# get sample ID from file list:
# strip APP_Samples/snapr/ from beginning
bamFiles <- gsub("APP_Samples/snapr/", "", bamFileList)
#strip .snap.bam from end
bamFiles <- gsub(".snap.bam", "", bamFiles)
# strip everything after a period
bamFiles <- gsub("\\..+", "", bamFiles)
bamFiles
gsub("DRB_", "DRB#", bamFiles)
gsub("DRB_", "DRB#", bamFiles)
bamFiles <- gsub("_", " ", bamFiles) # replace _ with space
bamFiles
bamFileList <- bamFileList$V1
bamFiles <- gsub("APP_Samples/snapr/", "", bamFileList) # strip APP_Samples/snapr/ from beginning
bamFiles <- gsub(".snap.bam", "", bamFiles) #strip .snap.bam from end
bamFiles <- gsub("\\..+", "", bamFiles) # strip everything after a period
# modify ids to be like APPCovariates$Mouse_ID
bamFiles <- gsub("DRB_", "DRB#", bamFiles) # replace DRB_ with DRB#
bamFiles <- gsub("_", " ", bamFiles) # replace _ with space
bamFiles
bamFiles %in% APPCovariates$Mouse_ID
bamFileList[3]
bamFileList[4]
bamFileList[1]
class APP_Samples
class(bamFileList)
bamFileList <- read.table(localFilePath, header = FALSE, stringsAsFactors = False)
bamFileList <- read.table(localFilePath, header = FALSE, stringsAsFactors = FALSE)
bamFileList <- bamFileList$V1
bamFileList[1]
bamFileList[2]
bamFileList[3]
bamFileList[4]
bamFileList <- gsub("APP_Samples/snapr/", "", bamFileList) # strip APP_Samples/snapr/ from beginning
bamFileList
bamFiles <- gsub(".snap.bam", "", bamFileList) #strip .snap.bam from end
bamFiles <- gsub("\\..+", "", bamFiles) # strip everything after a period
# modify ids to be like APPCovariates$Mouse_ID
bamFiles <- gsub("DRB_", "DRB#", bamFiles) # replace DRB_ with DRB#
bamFiles <- gsub("_", " ", bamFiles) # replace _ with space
bamFiles
APPCovariates$Mouse_ID
bamFiles %in% APPCovariates$Mouse_ID
?%in%
?in
bamFileList[order(match(bamFiles, APPCovariates$Mouse_ID))]
APPCovariates$Mouse_ID
APPCovariates <- cbind(APPCovariates,
"BAM_file_name" = bamFileList[order(match(bamFiles,
APPCovariates$Mouse_ID))])
APPCovariates$Mouse_ID %in % bamFiles
APPCovariates$Mouse_ID %in% bamFiles
unique(bamFileList)
unique(bamFiles)
duplicated(bamFiles)
bamFiles(duplicated(bamFiles))
bamFiles[duplicated(bamFiles)]
View(APPCovariates)
View(APPCovariates)
bamFileListObject <- synGet('syn3539805')
localFilePath <- getFileLocation(bamFileListObject)
bamFileList <- read.table(localFilePath, header = FALSE, stringsAsFactors = FALSE)
bamFileList <- bamFileList$V1
bamFileList
remove <- "APP_Samples/snapr/181710.FCC5PJFACXX_L8_IGTGAAA.snap.bam"
bamFileList %in% remove
remove <- "APP_Samples/snapr/181710.FCC5PJFACXX_L8_IGTGAAA.snap.bam"
bamFileList <- bamFileList [! bamFileList %in% remove]
# get sample ID from file list:
bamFileList <- gsub("APP_Samples/snapr/", "", bamFileList) # strip APP_Samples/snapr/ from beginning
bamFiles <- gsub(".snap.bam", "", bamFileList) #strip .snap.bam from end
bamFiles <- gsub("\\..+", "", bamFiles) # strip everything after a period
# modify ids to be like APPCovariates$Mouse_ID
bamFiles <- gsub("DRB_", "DRB#", bamFiles) # replace DRB_ with DRB#
bamFiles <- gsub("_", " ", bamFiles) # replace _ with space
# now, build column of bam Files in order corresponding to covariates sample list by matching bamFiles to APPCovariates$Mouse_ID
APPCovariates <- cbind(APPCovariates,
"BAM_file_name" = bamFileList[order(match(bamFiles,
APPCovariates$Mouse_ID))])
View(APPCovariates)
View(APPCovariates)
## Reformat values for consistency Tau covariates
APPCovariates$Genotype <- sub("NTG", "-", APPCovariates$Genotype)
APPCovariates$Genotype <- sub("NonTg", "-", APPCovariates$Genotype)
APPCovariates$Genotype <- sub("TG", "+", APPCovariates$Genotype)
APPCovariates$Genotype <- sub("Tg", "+", APPCovariates$Genotype)
APPCovariates$Sex <- sub("Female", "F", APPCovariates$Sex)
APPCovariates$Sex <- sub("Male", "M", APPCovariates$Sex)
APPCovariates$Age_months <- sub("mo", "", APPCovariates$Age_months)
# Reformat/rename IDs for consistency with readcount data
# First, replace space and # with _
APPCovariates$Mouse_ID <- sub("[#]", "_", APPCovariates$Mouse_ID)
APPCovariates$Mouse_ID <- sub("[ ]", "_", APPCovariates$Mouse_ID)
# next, replace - with . in all cases
APPCovariates$Mouse_ID <- sub('-', '.', APPCovariates$Mouse_ID)
# finally, I want to prepend all IDs that start with a number with "X". My regex-fu is weak:
APPCovariates$Mouse_ID <- sub('^1', 'X1', APPCovariates$Mouse_ID)
APPCovariates$Mouse_ID <- sub('^2', 'X2', APPCovariates$Mouse_ID)
APPCovariates$Mouse_ID <- sub('^3', 'X3', APPCovariates$Mouse_ID)
APPCovariates$Mouse_ID <- sub('^4', 'X4', APPCovariates$Mouse_ID)
# Write covariates table to local file
fileName <- "AMP-AD_TAUAPPms_UFL-Mayo-ISB_IlluminaHiSeq2000_App-Covariates.csv"
write.table(APPCovariates, file = fileName, quote = FALSE, sep = ",")
?uploadToSynapse
?synSetAnnotations
?synStore
library(synapseClient) # for synapse data exchange
library(RCurl) # to grab google doc covariates files
source("uploadToSynapse.R")
#Login to Synapse using credentials saved in .synapseConfig file
synapseLogin()
# Covariates will be:"Mouse_ID" "Experiment" "RIN" "Genotype" "Sex" "Age_months" "RLIMS.ID" "Seq.Run.ID" "Lane.Number" "Clusters" "BAM_file_name"
# excel summary files on google drive - permissions are set to "anyone with link can view"
# file “20141209 Taner mouse-mRNA Summary.xlsx”  includes Mouse_ID, Seq.Run.ID, Lane.Number, Clusters, RLIMS.ID; part of the Raw_RNAseq_file_name (based on Seq Run ID); it's at
url1 <- getURL("https://docs.google.com/spreadsheets/d/1IQnJheILYLsUgWbwPT7Qmrmi-JngK0R3HTAJUfBYRUg/export?format=csv")
# “Copy of APP Randomization 9-16-14.xlsx” includes mouse_ID, Line == Experiment, RIN, Genotype (to transform), Sex, age in months; it's at
url2 <- getURL("https://docs.google.com/spreadsheets/d/1X_QRh-xw8q3lZ8IOosHdydxUsoP2Ucgxbfbk0FzMJx4/export?format=csv")
rawCovariates1 <- read.csv(textConnection(url1))
rawCovariates2 <- read.csv(textConnection(url2))
#remove first row of rawCovariates2 (all blanks)
rawCovariates2 <- rawCovariates2[2:129,]
#rawCovariates1 has 188 observations. Those with rawCovariates1$Request.ID == "REQ-000000002442" overlaps the 128 observations in rawCovariates2. I'm not sure what the others are.
## Assemble APP covariates data frame
APPCovariates = data.frame("Mouse_ID" = rawCovariates2$Mouse.ID)
#will need to check that these IDs agree with IDs in readcount data
APPCovariates <- cbind(APPCovariates, "Experiment" = rawCovariates2$Line)
APPCovariates <- cbind(APPCovariates, "RIN" = rawCovariates2$RIN)
APPCovariates <- cbind(APPCovariates, "Genotype" = rawCovariates2$Genotype)
APPCovariates <- cbind(APPCovariates, "Sex" = rawCovariates2$Sex)
APPCovariates <- cbind(APPCovariates, "Age_months" = rawCovariates2$Age)
#note: everything so far is from rawCovariates2, so when getting something from rawCovariates1, be sure it's in the right order
APPCovariates <- cbind(APPCovariates, "RLIMS.ID" =
rawCovariates1$RLIMS.ID[match(APPCovariates$Mouse_ID,
rawCovariates1$Sample.Name)])
APPCovariates <- cbind(APPCovariates, "Seq.Run.ID" =
rawCovariates1$Seq.Run.ID[match(APPCovariates$Mouse_ID,
rawCovariates1$Sample.Name)])
APPCovariates <- cbind(APPCovariates, "Lane.Number" =
rawCovariates1$Lane.Number[match(APPCovariates$Mouse_ID,
rawCovariates1$Sample.Name)])
APPCovariates <- cbind(APPCovariates, "Clusters" =
rawCovariates1$Clusters[match(APPCovariates$Mouse_ID,
rawCovariates1$Sample.Name)])
## add bam filenames - generated with makeFileList, at syn3539805
bamFileListObject <- synGet('syn3539805')
localFilePath <- getFileLocation(bamFileListObject)
bamFileList <- read.table(localFilePath, header = FALSE, stringsAsFactors = FALSE)
bamFileList <- bamFileList$V1
# NOTE: Sample 181710 was rerun for technical reasons. I want to discard the first run, 181710.FCC5PJFACXX_L8_IGTGAAA.snap.bam, and keep the later one, run in lane 2: 181710.FCC5PVPACXX_L2_IGTGAAA.snap.bam
remove <- "APP_Samples/snapr/181710.FCC5PJFACXX_L8_IGTGAAA.snap.bam"
bamFileList <- bamFileList [! bamFileList %in% remove]
# get sample ID from file list:
bamFileList <- gsub("APP_Samples/snapr/", "", bamFileList) # strip APP_Samples/snapr/ from beginning
bamFiles <- gsub(".snap.bam", "", bamFileList) #strip .snap.bam from end
bamFiles <- gsub("\\..+", "", bamFiles) # strip everything after a period
# modify ids to be like APPCovariates$Mouse_ID
bamFiles <- gsub("DRB_", "DRB#", bamFiles) # replace DRB_ with DRB#
bamFiles <- gsub("_", " ", bamFiles) # replace _ with space
# now, build column of bam Files in order corresponding to covariates sample list by matching bamFiles to APPCovariates$Mouse_ID
APPCovariates <- cbind(APPCovariates,
"BAM_file_name" = bamFileList[order(match(bamFiles,
APPCovariates$Mouse_ID))])
## Reformat values for consistency Tau covariates
APPCovariates$Genotype <- sub("NTG", "-", APPCovariates$Genotype)
APPCovariates$Genotype <- sub("NonTg", "-", APPCovariates$Genotype)
APPCovariates$Genotype <- sub("TG", "+", APPCovariates$Genotype)
APPCovariates$Genotype <- sub("Tg", "+", APPCovariates$Genotype)
APPCovariates$Sex <- sub("Female", "F", APPCovariates$Sex)
APPCovariates$Sex <- sub("Male", "M", APPCovariates$Sex)
APPCovariates$Age_months <- sub("mo", "", APPCovariates$Age_months)
# Reformat/rename IDs for consistency with readcount data
# First, replace space and # with _
APPCovariates$Mouse_ID <- sub("[#]", "_", APPCovariates$Mouse_ID)
APPCovariates$Mouse_ID <- sub("[ ]", "_", APPCovariates$Mouse_ID)
# next, replace - with . in all cases
APPCovariates$Mouse_ID <- sub('-', '.', APPCovariates$Mouse_ID)
# finally, I want to prepend all IDs that start with a number with "X". My regex-fu is weak:
APPCovariates$Mouse_ID <- sub('^1', 'X1', APPCovariates$Mouse_ID)
APPCovariates$Mouse_ID <- sub('^2', 'X2', APPCovariates$Mouse_ID)
APPCovariates$Mouse_ID <- sub('^3', 'X3', APPCovariates$Mouse_ID)
APPCovariates$Mouse_ID <- sub('^4', 'X4', APPCovariates$Mouse_ID)
# Write covariates table to local file
fileName <- "AMP-AD_TAUAPPms_UFL-Mayo-ISB_IlluminaHiSeq2000_App-Covariates.csv"
write.table(APPCovariates, file = fileName, quote = FALSE, sep = ",")
# upload to synapse with annotation, provenance, etc.
APPCovariatesId <- "syn3483880"
uploadToSynapse(fileName, APPCovariatesId)
setwd("~/Projects/UO1-AMP/working/APP work")
source("uploadToSynapse.R")
source("uploadToSynapse.R")
uploadToSynapse(fileName, APPCovariatesId)
?synGetProperties
source("uploadToSynapse.R")
uploadToSynapse(fileName, APPCovariatesId)
?Activity
act <- Activity(name='Covariate file generation',
used=list(
list(codeFile,wasExecuted=T)))
codeFile <- ("https://github.com/PriceLab/AMP-ad/APP_work/tree/v0.1-alpha/makeAPPCovariates.R")
metaDataOnly <- synGet(synID, downloadFile=F)
file <- "AMP-AD_TAUAPPms_UFL-Mayo-ISB_IlluminaHiSeq2000_App-Covariates.csv"
synID <- "syn3483880"
metaDataOnly <- synGet(synID, downloadFile=F)
objectAnnotations <- synGetAnnotations(metaDataOnly)
objectProperties <- synGetProperties(metaDataOnly)
objectActivity  <- synGetActivity(metaDataOnly)
fileObject <- File(path = file,
parentId = objectProperties$parentId,
name = "AMP-AD_TAUAPPms_UFL-Mayo-ISB_IlluminaHiSeq2000_App-Covariates")
metaDataAnnotations <- list(consortium = "AMP-AD",
study = "TAUAPPms",
center = "UFL-Mayo-ISB",
dataType = "Covariates",
disease = "Alzheimers Disease",
platform = "IlluminaHiSeq2000",
mouseModel = "APP",
tissueTypeAbrv = "FB",
tissueType = "Forebrain",
fileType = "csv",
organism = "Mus musculus",
dataContact = "Ben Heavner <ben.heavner@systemsbiology.org>")
# set the annotations of the fileObject
synSetAnnotations(fileObject) <- metaDataAnnotations
codeFile <- ("https://github.com/PriceLab/AMP-ad/APP_work/tree/v0.1-alpha/makeAPPCovariates.R")
act <- Activity(name='Covariate file generation',
used=list(
list(codeFile,wasExecuted=T)))
source("uploadToSynapse.R")
uploadToSynapse(fileName, APPCovariatesId)
act <- Activity(properties = list(name='Covariate file generation',
used=list(codeFile, wasExecuted = T)))
act <- Activity(list(name='Covariate file generation',
used=list(codeFile, wasExecuted = T)))
act <- Activity(list(name='Covariate file generation',
used = list(codeFile)))
act <- Activity(list(name='Covariate file generation',
executed = list(codeFile)))
act <- Activity(list(name='Covariate file generation',
used = list(codeFile)))
source("uploadToSynapse.R")
uploadToSynapse(fileName, APPCovariatesId)
annotations(fileObject)
properties(fileObject)
?synStore
act <- Activity(name='Covariate file generation',
executed = as.list(codeFile)))
act <- Activity(name='Covariate file generation',
executed = as.list(codeFile))
generatedBy(fileObject) = act
fileObject
metaDataOnly
?getProperties
objectProperties
fileObject$id
fileObject.id
str(fileObject)
objectProperties
?synStore
fileObject$prroperties$id
fileObject$prroperties
synID <- "syn3483880"
library(synapseClient) # for synapse data exchange
synapseLogin()
synID <- "syn3483880"
fileObject <- synGet(synID, downloadFile=F)
objectAnnotations <- synGetAnnotations(metaDataOnly)
objectProperties <- synGetProperties(metaDataOnly)
objectActivity  <- synGetActivity(metaDataOnly)
file <- "AMP-AD_TAUAPPms_UFL-Mayo-ISB_IlluminaHiSeq2000_App-Covariates.csv"
metaDataOnly <- synGet(synID, downloadFile=F)
objectAnnotations <- synGetAnnotations(metaDataOnly)
objectProperties <- synGetProperties(metaDataOnly)
objectActivity  <- synGetActivity(metaDataOnly)
fileObject
fileObject$Path
?setPath
?file
?File
str(File)
str(fileObject)
fileObject.path
fileObject$path
str(fileObject)
methods(fileObject)
class(fileObject)
methods(File)
methods(synapseClient)
?synSetAnnotations
synGetProperty(fileObject)
synGetPropertys(fileObject)
synGetPropertie(fileObject)
synGetProperties(fileObject)
file <- "AMP-AD_TAUAPPms_UFL-Mayo-ISB_IlluminaHiSeq2000_App-Covariates.csv"
synID <- "syn3483880"
fileObject <- synGet(synID, downloadFile=F)
objectAnnotations <- synGetAnnotations(fileObject)
objectProperties <- synGetProperties(fileObject)
objectActivity  <- synGetActivity(fileObject)
fileObjectAnnotations <- list(consortium = "AMP-AD",
study = "TAUAPPms")
synSetAnnotations(fileObject) <- fileObjectAnnotations
# define properties
fileProperties <- list(path = file,
name = "AMP-AD_TAUAPPms_UFL-Mayo-ISB_IlluminaHiSeq2000_App-Covariates")
synSetProperties(fileObject) <- fileProperties
objectProperties
synSetProperties(fileObject) <- fileProperties
codeFile <- ("https://github.com/PriceLab/AMP-ad/blob/v0.1/UFL/APP/makeAPPCovariates.R")
act <- Activity(name='Covariate file generation',
executed = as.list(codeFile))
generatedBy(fileObject) = act
q()
