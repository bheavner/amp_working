!grepl(".bam.bai", processedFiles$V4[index])
for (index in 1:nrows(processedFiles)) {
if(grepl(".bam", processedFiles$V4[index])) {
system(paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
processedFiles$V4[index], " --dryrun", sep="")
}
}
for (index in 1:nrows(processedFiles)) {
if(grepl(".bam", processedFiles$V4[index])) {
system(paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
processedFiles$V4[index], " --dryrun", sep=""))
}
}
?numrows
?nrows
?size
?eim
?dim
nrow(processedFiles)
for (index in 1:nrow(processedFiles)) {
if(grepl(".bam", processedFiles$V4[index])) {
system(paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
processedFiles$V4[index], " --dryrun", sep=""))
}
}
paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
processedFiles$V4[index], " --dryrun", sep="")
paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
processedFiles$V4[index],
"s3://mayo-u01-rnaseq/rush_broad_ss/",
" --dryrun",
sep="")
for (index in 1:nrow(processedFiles)) {
if(grepl(".bam", processedFiles$V4[index])) {
system(paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
processedFiles$V4[index],
" s3://mayo-u01-rnaseq/rush_broad_ss/",
" --dryrun",
sep=""))
}
}
for (index in 1:nrow(processedFiles)) {
if(!grepl(".bam", processedFiles$V4[index])) {
system(paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
processedFiles$V4[index],
" s3://mayo-u01-rnaseq/rush_broad_ss/",
" --dryrun",
sep=""))
}
}
if(!grepl(".bam", processedFiles$V4[index])) { # remove negation to transfer .bam and .bam.bai files
system(paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
processedFiles$V4[index],
" s3://mayo-u01-rnaseq/rush_broad_ss/snapr",
" --dryrun", # uncomment to test!
sep=""))
}
if(!grepl(".bam", processedFiles$V4[index])) { # remove negation to transfer .bam and .bam.bai files
system(paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
processedFiles$V4[index],
" s3://mayo-u01-rnaseq/rush_broad_ss/snapr/",
" --dryrun", # uncomment to test!
sep=""))
}
for (index in 1:nrow(processedFiles)) {
if(!grepl(".bam", processedFiles$V4[index])) { # remove negation to transfer .bam and .bam.bai files
system(paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
processedFiles$V4[index],
" s3://mayo-u01-rnaseq/rush_broad_ss/snapr/",
#" --dryrun", # uncomment to test!
sep=""))
}
}
test <- system("aws s3 ls s3://mayo-u01-rnaseq/rush_broad_ss/snapr/")
system(paste("aws s3 ls s3://mayo-u01-rnaseq/rush_broad_ss/snapr/", ">> copied.txt"))
copiedFiles <- read.table("processOutput.txt")
?match
View(copiedFiles)
View(copiedFiles)
copiedFiles$V4 %in% processedFiles$V4
sum(copiedFiles$V4 %in% processedFiles$V4)
sum(copiedFiles$V4 %in% processedFiles$V4) == nrow(processedFiles$V4)
nrow(processedFiles$V4)
nrow(processedFiles)
sum(copiedFiles$V4 %in% processedFiles$V4) == nrow(processedFiles)
paste("aws s3 rm s3://mayo-u01-rnaseq/snapr/", "copiedFiles$V4[index]",
" --dryrun", # uncomment to test!
sep="")
paste("aws s3 rm s3://mayo-u01-rnaseq/snapr/", copiedFiles$V4[index],
" --dryrun", # uncomment to test!
sep=""))
paste("aws s3 rm s3://mayo-u01-rnaseq/snapr/", copiedFiles$V4[index],
" --dryrun", # uncomment to test!
sep="")
if(sum(copiedFiles$V4 %in% processedFiles$V4) == nrow(processedFiles)) {
for (index in 1:nrow(copiedFiles)) {
system(paste("aws s3 rm s3://mayo-u01-rnaseq/snapr/", copiedFiles$V4[index],
" --dryrun", # uncomment to test!
sep=""))
}
}
View(copiedFiles)
View(copiedFiles)
View(copiedFiles)
View(copiedFiles)
system(paste("aws s3 ls s3://mayo-u01-rnaseq/rush_broad_ss/snapr/", ">> copied.txt"))
copiedFiles <- read.table("copied.txt")
system(paste("aws s3 ls s3://mayo-u01-rnaseq/rush_broad_ss/snapr/", ">> copied.txt"))
copiedFiles <- read.table("copied.txt")
copiedFiles <- read.table("copied.txt")
if(sum(copiedFiles$V4 %in% processedFiles$V4) == nrow(processedFiles)) {
for (index in 1:nrow(copiedFiles)) {
system(paste("aws s3 rm s3://mayo-u01-rnaseq/snapr/", copiedFiles$V4[index],
" --dryrun", # uncomment to test!
sep=""))
}
}
copiedFiles$V4 %in% processedFiles$V4
grepl(".bam", processedFiles$V4)
sum(!grepl(".bam", processedFiles$V4))
!grepl(".bam", processedFiles$V4)
processedFiles$V4[!grepl(".bam", processedFiles$V4)]
system(paste("aws s3 ls s3://mayo-u01-rnaseq/rush_broad_ss/snapr/", ">> copied.txt"))
copiedFiles <- read.table("copied.txt")
processedFiles$V4[!grepl(".bam", processedFiles$V4)]
View(copiedFiles)
View(copiedFiles)
nonBam <- processedFiles$V4[!grepl(".bam", processedFiles$V4)]
copiedFiles$V4 %in% nonBam
nonBam %in% copiedFiles$V4
unique(copiedFiles$V4)
system(paste("aws s3 ls s3://mayo-u01-rnaseq/rush_broad_ss/snapr/", "> copied.txt"))
copiedFiles <- read.table("copied.txt")
sum(copiedFiles$V4 %in% nonBam) == sum(nonBam %in% copiedFiles$V4)
copiedFiles <- read.table("copied.txt")
nonBam <- processedFiles$V4[!grepl(".bam", processedFiles$V4)]
sum(copiedFiles$V4 %in% nonBam) == sum(nonBam %in% copiedFiles$V4)
copiedFiles$V4 %in% nonBam
nonBam %in% copiedFiles$V4
nonBam
unique(nonBam)
setdiff(nonBam, copiedFiles$V4)
sum(copiedFiles$V4 %in% nonBam)
sum(nonBam %in% copiedFiles$V4)
nrows(copiedFiles)
nrow(copiedFiles)
nrow(nonBam)
nrow(nonBam$V4)
nonBam
nrow(copiedFiles)
nrow(as.string(nonBam))
nrow(nonBam)
class(copiedFiles)
class(nonBam)
?as.data.frame
as.data.frame(nonBam)
nrows(as.data.frame(nonBam))
nrow(as.data.frame(nonBam))
nrow(copiedFiles)
nonBam
setdiff(copiedFiles, as.data.frame(nonBam))
setdiff(copiedFiles$V4, as.data.frame(nonBam))
grepl(".bam", processedFiles$V4)
processedFiles$V4[!grepl(".bam", processedFiles$V4)]
nrow(as.data.frame(nonBam))
nonBam
unique(nonBam)
dim(nonBam)
toCopy <- processedFiles$V4[!grepl(".bam", processedFiles$V4)]
toCopy
nrow(as.data.frame(toCopy))
toCopy
str(toCopy)
nrow(toCopy)
dim(toCopy)
as.string(toCopy)
as.matrix(toCopy)
unique(as.matrix(toCopy))
duplicated(as.matrix(toCopy))
as.matrix(toCopy)[91:180]
grep(10249336, toCopy)
grepl(10249336, toCopy)
toCopy[1:10, 91:101]
toCopy[1:10 91:101]
toCopy[1:10]
toCopy[91:101]
unique(toCopy)
toCopy <- processedFiles$V4[!grepl(".bam", processedFiles$V4)]
unique(toCopy)
toCopy <- unique(toCopy)
sampleSwapIds <- c("10249336", "50100518", "50104008", "20177982", "36492755",
"05689621", "11444465", "10315029", "20270920", "11615242")
for (index in 1:length(sampleSwapIds) ) {
system(paste("aws s3 ls s3://mayo-u01-rnaseq/snapr/|grep",
sampleSwapIds[index],
">> processOutput.txt"))
}
processedFiles <- read.table("processOutput.txt")
numMissed  <- length(sampleSwapIds) - (nrow(processedFiles) / 12)
numMissed
# which is missing?
outputs  <- rep(NA,length(sampleSwapIds))
if(numMissed > 0) {
for (index in 1:length(sampleSwapIds) ) {
outputs[index]  <- sum(grepl(sampleSwapIds[index], processedFiles$V4))
}
}
sampleSwapIds[!as.logical(outputs)]
toCopy <- processedFiles$V4[!grepl(".bam", processedFiles$V4)]
toCopy <- unique(toCopy)
nrow(toCopy)
dim(toCopy)
toCopy
class(toCopy)
?read.table
processedFiles <- read.table("processOutput.txt", stringsAsFactors = FALSE)
numMissed  <- length(sampleSwapIds) - (nrow(processedFiles) / 12)
numMissed
toCopy <- processedFiles$V4[!grepl(".bam", processedFiles$V4)]
dim(toCopy)
str(toCopy)
length(toCopy)
unique(toCopy)
toCopy
toCopy[1]
for (index in 1:length(toCopy)) {
system(paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
toCopy[index],
" s3://mayo-u01-rnaseq/rush_broad_ss/snapr/",
" --dryrun", # comment out to run!
sep=""))
}
}
system(paste("aws s3 ls s3://mayo-u01-rnaseq/rush_broad_ss/snapr/", "> copied.txt"))
copiedFiles <- read.table("copied.txt", stringsAsFactors = FALSE)
?read.table
copiedFiles <- read.table("copied.txt", stringsAsFactors = FALSE, row.names = rep(NA, 120))
rep(NA, 120)
copiedFiles <- read.table("copied.txt", stringsAsFactors = FALSE)
copiedFiles <- read.table("copied.txt", stringsAsFactors = FALSE, skip=1)
nonBam <- processedFiles$V4[!grepl(".bam", processedFiles$V4)]
sum(copiedFiles$V4 %in% nonBam) == sum(nonBam %in% copiedFiles$V4)
nrow(copiedFiles)
read.table("copied.txt", stringsAsFactors = FALSE)
system(paste("aws s3 ls s3://mayo-u01-rnaseq/rush_broad_ss/snapr/", "> copied.txt"))
read.table("copied.txt", stringsAsFactors = FALSE)
read.table("copied.txt", stringsAsFactors = FALSE, skip=1)
length(nonBam)
nonBam[1]
nonBam[100]
duplicate(copiedFiles)
duplicated(copiedFiles)
duplicated(nonBam)
copiedFiles$V4 %in% nonBam
nonBam %in% copiedFiles$V4
setdiff(copiedFiles, nonBam)
setdiff(copiedFiles, nonBam$V4)
nonBam
copiedFiles
setdiff(copiedFiles$V4, nonBam)
sum(copiedFiles$V4 %in% nonBam) == sum(nonBam %in% copiedFiles$V4)
copiedFiles$V4 %in% nonBam
nonBam %in% copiedFiles$V4
copiedFiles
copiedFiles$V4
nonBam
setDiff(nonBam, copiedFiles$V4)
setdiff(nonBam, copiedFiles$V4)
system(paste("aws s3 ls s3://mayo-u01-rnaseq/rush_broad_ss/snapr/", "> copied.txt"))
copiedFiles <- read.table("copied.txt", stringsAsFactors = FALSE, skip=1)
nonBam <- processedFiles$V4[!grepl(".bam", processedFiles$V4)]
setdiff(nonBam, copiedFiles$V4) #05689621.FCC5RK6ACXX_L4IACTGAT.snap.fusions.reads.fa not copied. Do it now.
as.logical(setdiff(nonBam, copiedFiles$V4))
nrow(copiedFiles)
for (index in 1:nrow(copiedFiles)) {
system(paste("aws s3 rm s3://mayo-u01-rnaseq/snapr/", copiedFiles$V4[index],
" --dryrun", # uncomment to test!
sep=""))
}
for (index in 1:nrow(copiedFiles)) {
system(paste("aws s3 rm s3://mayo-u01-rnaseq/snapr/", copiedFiles$V4[index],
#" --dryrun", # comment out to run -- CAREFUL!
sep=""))
}
library(synapseClient) # for synapse upload
library(gdata) # to read .xlsx file -  install.packages("gdata")
#Login to Synapse using credentials saved in .synapseConfig file
synapseLogin()
rerunSamples  <- synGet("syn3523879")
rerunSamplesFilePath <- getFileLocation(rerunSamples)
rerun <- read.xls(rerunSamplesFilePath, sheet = 2, header = TRUE, stringsAsFactors = FALSE)
View(rerun)
View(rerun)
inBucket <- read.table("all_snapr_out.txt", stringsAsFactors = FALSE)
inBucket <- read.table("all_snapr_out.txt", stringsAsFactors = FALSE, skip=1)
View(inBucket)
View(inBucket)
inBucket$V4
inBucket <- inBucket$V4
class(inBucket)
inBucket
inBucket[!grepl(".bam", inBucket)]
inBucket[!grepl(".bam", inBucket)]
notBam <- inBucket[!grepl(".bam", inBucket)]
notBam <- unique(inBucket[!grepl(".bam", inBucket)])
View(rerun)
View(rerun)
rerun <- read.xls(rerunSamplesFilePath, sheet = 1, header = TRUE, stringsAsFactors = FALSE)
View(rerun)
View(rerun)
rerun[136]
rerun[136,]
colnames(rerun)
rerun[136,21:24]
rerun[136,21]
rerun[136,22]
rerun[136,23]
rerun[136,24]
View(rerun)
View(rerun)
MBBSamples <- (rerun$Source == "BannerSunHealth_TomBeach" | rerun$Source == "MayoBrainBank_Dickson")
MBBFile1 <- rerun[MBBSamples, "DriveA_FileName1"]
MBBFile2 <- rerun[MBBSamples, "DriveA_FileName2"]
MBBFile3 <- rerun[MBBSamples, "DriveB_FileName1"]
MBBFile4 <- rerun[MBBSamples, "DriveB_FileName2"]
MBBFiles <- c(MBBFile1[MBBFile1 != "NULL"],
MBBFile2[MBBFile2 != "NULL"],
MBBFile3[MBBFile3 != "NULL"],
MBBFile4[MBBFile4 != "NULL"])
length(MBBFiles) #568... should be 278 * 2 = 556
length(unique(MBBFiles)) #
MBBFiles
sub(".+\/", '', MBBFiles)
?sub
sub(".+/", '', MBBFiles)
head(MBBFiles)
MBBFiles <- sub(".+/", '', MBBFiles)
head(MBBFiles)
sub("L\d_.+", '', MBBFiles)
sub("L/d_.+", '', MBBFiles)
?gsub
sub("L[0-9]_.+", '', MBBFiles)
head(MBBFiles)
sub("_L[0-9]_.+", '', MBBFiles)
MBBSamples <- (rerun$Source == "BannerSunHealth_TomBeach" | rerun$Source == "MayoBrainBank_Dickson")
MBBFile1 <- rerun[MBBSamples, "DriveA_FileName1"]
MBBFile2 <- rerun[MBBSamples, "DriveA_FileName2"]
MBBFile3 <- rerun[MBBSamples, "DriveB_FileName1"]
MBBFile4 <- rerun[MBBSamples, "DriveB_FileName2"]
MBBFiles <- c(MBBFile1[MBBFile1 != "NULL"],
MBBFile2[MBBFile2 != "NULL"],
MBBFile3[MBBFile3 != "NULL"],
MBBFile4[MBBFile4 != "NULL"])
MBBFiles  <- unique(MBBFiles) # there are 6 files on both drive A and drive B
# strip off path info
MBBstring <- sub(".+/", '', MBBFiles)
# strip off things after L#
MBBstring <- sub("_L[0-9]_.+", '', MBBString)
MBBString <- sub(".+/", '', MBBFiles)
MBBString <- sub("_L[0-9]_.+", '', MBBString)
head(MBBString)
unique(MBBString)
MBBString <- unique(MBBString)
length(MBBString)
system("aws s3 ls s3://mayo-u01-rnaseq/snapr/ > all_snapr_out.txt")
inBucket <- read.table("all_snapr_out.txt", stringsAsFactors = FALSE, skip=1)
inBucket <- inBucket$V4
notBam <- unique(inBucket[!grepl(".bam", inBucket)])
length(notBam)
length(notBam)/12
head(notBam)
sub("\.snap.+", '', notBam)
sub("/.snap.+", '', notBam)
sub(".snap.+", '', notBam)
processedList <- unique(sub(".snap.+", '', notBam))
processedList
headMBBString
head(MBBString)
head(processedList)
unique(sub("_L[0-9].+", '', processedList))
processedList <- unique(sub("_L[0-9].+", '', processedList))
setdiff(notBam, processedList)
processedList %in% notBam
processedList[1]
notBam[1]
head(MBBString)
head(processedList)
setdif(MBBString, processedList)
setdiff(MBBString, processedList)
setdiff(processedList, MBBString)
?setdiff
MBBString %in% processedList
notProcessed  <- setdiff(MBBString, processedList)
notProcessed
toReRun <- c("NA04-258", "NA05-327", "05-18", "06-05", "06-15", "09-34", "09-50")
toReRun
source_files  <- read.table("snapr\ running/source_files", stringsAsFactors = FALSE)
View(source_files)
source_files <- source_files$V1
source_samples <- gsub(".+/", "", source_files)
source_samples <- gsub(".fastq.gz", "", source_samples)
#strip ._ from beginning of some sample names
source_samples <- gsub("\\._", "", source_samples)
# strip everything after a period
source_samples <- gsub("\\..+", "", source_samples)
head(source_samples)
toReRun %in% source_samples
source_files
grep("258", source_files)
souce_files[522]
source_files[522]
toReRun %in% source_samples
grep("NA03-163", source_files)
source_files[366 367]
source_files[366]
source_files[367]
toReRun %in% source_samples
source_samples %in% toReRun
sum(source_samples %in% toReRun)
source_samples[source_samples %in% toReRun]
source_files[source_samples %in% toReRun]
toReRun %in% source_samples
head(notBam)
grep('NA04-258.FCC5RNRACXX',notBam)
grep('NA05-327.FCC5RNRACXX',notBam)
system("aws s3 ls s3://mayo-u01-rnaseq/ --recursive > inBucket.txt")
source_files <- read.table("inBucket.txt", stringsAsFactors = FALSE)
View(source_files)
View(source_files)
source_files <- source_files$V4
source_samples <- gsub(".+/", "", source_files)
head(source_samples)
source_samples <- gsub(".fastq.gz", "", source_samples)
source_files <- read.table("inBucket.txt", stringsAsFactors = FALSE)
source_files <- source_files$V4
grep("NA04-258.FCC5RNRACXX", source_files)
grep("NA05-327.FCC5RNRACXX", source_files)
source_files[4050]
source_samples %in% toReRun
source_files[source_samples %in% toReRun]
source_files[!(source_samples %in% processed_samples)]
library(synapseClient) # for synapse upload
library(gdata) # to read .xlsx file -  install.packages("gdata")
synapseLogin()
rerunSamples  <- synGet("syn3523879")
rerunSamplesFilePath <- getFileLocation(rerunSamples)
rerun <- read.xls(rerunSamplesFilePath, sheet = 1, header = TRUE, stringsAsFactors = FALSE)
MBBSamples <- (rerun$Source == "BannerSunHealth_TomBeach" | rerun$Source == "MayoBrainBank_Dickson")
MBBFile1 <- rerun[MBBSamples, "DriveA_FileName1"]
MBBFile2 <- rerun[MBBSamples, "DriveA_FileName2"]
MBBFile3 <- rerun[MBBSamples, "DriveB_FileName1"]
MBBFile4 <- rerun[MBBSamples, "DriveB_FileName2"]
MBBFiles <- c(MBBFile1[MBBFile1 != "NULL"],
MBBFile2[MBBFile2 != "NULL"],
MBBFile3[MBBFile3 != "NULL"],
MBBFile4[MBBFile4 != "NULL"])
MBBFiles  <- unique(MBBFiles) # there are 6 files on both drive A and drive B
MBBString <- sub(".+/", '', MBBFiles)
MBBString <- sub("_L[0-9]_.+", '', MBBString)
# I expect 278 are Mayo temporal cortex samples
MBBString <- unique(MBBString)
length(MBBString) # 278 - yay!
head(MBBString)
MBBString
system("aws s3 ls s3://mayo-u01-rnaseq/snapr/ > all_snapr_out.txt")
inBucket <- read.table("all_snapr_out.txt", stringsAsFactors = FALSE, skip=1)
inBucket <- inBucket$V4
head(inBucket)
notBam <- unique(inBucket[!grepl(".bam", inBucket)])
head(notBam)
notBam %in% MBBString
sum(notBam %in% MBBString)
class(notBam)
class(MBBString)
head(MBBString)
head(notBam)
intersect(notBam, MBBString)
class(notBam)
str(notBam)
?class
unique(grep(paste(MBBString, collapse="|"), notBam, value=TRUE))
toCopy <- unique(grep(paste(MBBString, collapse="|"), notBam, value=TRUE))
head(toCopy)
toCopy[1:20]
length(toCopy)
length(MBBString)
278*12
278*10
for (index in 1:length(toCopy)) {
system(paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
toCopy[index],
" s3://mayo-u01-rnaseq/rush_broad_ss/snapr/",
" --dryrun", # comment out to run!
sep=""))
}
head(notBam)
system(paste("aws s3 ls s3://mayo-u01-rnaseq/TCXOutput/", "> TCXCopied.txt"))
copiedFiles <- read.table("TCXCopied.txt", stringsAsFactors = FALSE, skip=1)
setdiff(copiedFiles, notBam) #05689621.FCC5RK6ACXX_L4IACTGAT.snap.fusions.reads.fa not copied. Do it now.
index = 1
system(paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
toCopy[index],
" s3://mayo-u01-rnaseq/TCXOutput/",
" --dryrun", # comment out to run!
sep=""))
for (index in 1:length(toCopy)) {
system(paste("aws s3 cp s3://mayo-u01-rnaseq/snapr/",
toCopy[index],
" s3://mayo-u01-rnaseq/TCXOutput/",
" --dryrun", # comment out to run!
sep=""))
}
